[{"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\index.js":"1","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\reportWebVitals.js":"2","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\App.js":"3","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\router.js":"4","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Header\\Header.js":"5","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\NavBar\\NavBar.js":"6","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\PlayVideo\\PlayVideo.js":"7","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Home\\Home.js":"8","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Result\\Result.js":"9","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Watch\\Watch.js":"10","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Channel\\Channel.js":"11","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\api\\baseApi.js":"12","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\SearchBar\\SearchBar.js":"13","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonVideoChannel.js":"14","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonWatch.js":"15","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\utils\\index.js":"16","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\VideoList\\VideoList.js":"17","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonHome.js":"18","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonResult.js":"19","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\VideoDetails\\VideoDetails.js":"20"},{"size":517,"mtime":1611417810733,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1611417810748,"results":"23","hashOfConfig":"22"},{"size":1338,"mtime":1611417810733,"results":"24","hashOfConfig":"22"},{"size":773,"mtime":1611417810748,"results":"25","hashOfConfig":"22"},{"size":1191,"mtime":1611417810733,"results":"26","hashOfConfig":"22"},{"size":2535,"mtime":1611417810733,"results":"27","hashOfConfig":"22"},{"size":338,"mtime":1611417810733,"results":"28","hashOfConfig":"22"},{"size":738,"mtime":1611417810748,"results":"29","hashOfConfig":"22"},{"size":1221,"mtime":1611417810748,"results":"30","hashOfConfig":"22"},{"size":15163,"mtime":1611650144989,"results":"31","hashOfConfig":"22"},{"size":14477,"mtime":1611648819658,"results":"32","hashOfConfig":"22"},{"size":4898,"mtime":1611648700630,"results":"33","hashOfConfig":"22"},{"size":834,"mtime":1611417810733,"results":"34","hashOfConfig":"22"},{"size":1759,"mtime":1611417810733,"results":"35","hashOfConfig":"22"},{"size":3158,"mtime":1611646437636,"results":"36","hashOfConfig":"22"},{"size":2309,"mtime":1611417810748,"results":"37","hashOfConfig":"22"},{"size":7689,"mtime":1611417810733,"results":"38","hashOfConfig":"22"},{"size":2601,"mtime":1611417810733,"results":"39","hashOfConfig":"22"},{"size":2909,"mtime":1611417810733,"results":"40","hashOfConfig":"22"},{"size":8408,"mtime":1611417810733,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"svg9gm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\index.js",[],["93","94"],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\reportWebVitals.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\App.js",["95","96","97","98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport routes from \"./router\";\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Header from \"./components/Header/Header\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\n\r\nfunction App(props) {\r\n  const [showNavbar, setShowNavbar] = useState(true);\r\n\r\n  const RoutesManagement = () => {\r\n    if (routes.length > 0) {\r\n      const route1 = routes.map((route, index) => (\r\n        <Route\r\n          key={index}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          component={route.main}\r\n        />\r\n      ));\r\n      return route1;\r\n    } else {\r\n      console.log(\"No component\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <HashRouter> */}\r\n      <Router>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"lg-12 md-12 sm-12 app__header\">\r\n            <Header setShowNavbar={setShowNavbar} />\r\n          </Grid>\r\n          <Grid item xs={12} className=\"lg-12 md-12 sm-12\">\r\n            <Switch>{RoutesManagement()}</Switch>\r\n          </Grid>\r\n        </Grid>\r\n      </Router>\r\n      {/* </HashRouter> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\router.js",["100"],"import Home from \"./pages/Home/Home\";\r\nimport Result from \"./pages/Result/Result\";\r\nimport Watch from \"./pages/Watch/Watch\";\r\nimport PlayVideo from \"./components/PlayVideo/PlayVideo\";\r\nimport Channel from \"./pages/Channel/Channel\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    main: () => <Home />,\r\n  },\r\n  {\r\n    path: \"/result/:inputSearch\",\r\n    exact: true,\r\n    main: ({ match }) => <Result match={match} />,\r\n  },\r\n  {\r\n    path: `/watch/:videoId`,\r\n    exact: true,\r\n    main: ({ match, location }) => <Watch match={match} location={location} />,\r\n  },\r\n  {\r\n    path: `/channel/:channelId`,\r\n    exact: true,\r\n    main: ({ match, location }) => (\r\n      <Channel match={match} location={location} />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Header\\Header.js",["101","102","103","104","105","106"],"import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport baseApi from \"../../api/baseApi\";\r\nimport \"./Header.css\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu } from \"@material-ui/icons\";\r\n\r\nHeader.propTypes = {};\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <div className=\"header__logo--btn\">\r\n          <Menu style={{ width: \"30px\", height: \"30px\" }} />\r\n        </div>\r\n        <Link to={`/`}>\r\n          <img src={Logo} width=\"80vmin\" height=\"auto\" />\r\n        </Link>\r\n        <div>\r\n          <span>CLONE</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__searchbar\">\r\n        <SearchBar />\r\n      </div>\r\n      <div className=\"header__info\">\r\n        <Avatar\r\n          style={{ marginRight: \"20px\", backgroundColor: \"#42b9e0\" }}\r\n          alt=\"Huyhero\"\r\n          src=\"/assets/favicon_144x144.png\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\NavBar\\NavBar.js",["107","108","109","110","111"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MenuList,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  Typography,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Home,\r\n  Whatshot,\r\n  Subscriptions,\r\n  VideoLibrary,\r\n  Visibility,\r\n  OndemandVideo,\r\n  WatchLater,\r\n  ThumbUp,\r\n} from \"@material-ui/icons\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <MenuList>\r\n          <MenuItem className=\"navbar__item\">\r\n            <div className=\"navbar__icons\">\r\n              <Home fontSize=\"small\" className=\"navbar-icon\" />\r\n            </div>\r\n            <p>Trang chủ</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <Whatshot fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Thịnh hành</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <Subscriptions fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Kênh đăng ký</p>\r\n          </MenuItem>\r\n\r\n          <hr />\r\n\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <VideoLibrary fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Thư viện</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <Visibility fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Video đã xem</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <OndemandVideo fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Video của bạn</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <WatchLater fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Xem sau</p>\r\n          </MenuItem>\r\n          <MenuItem className=\"navbar__item\">\r\n            <span className=\"navbar__icons\">\r\n              <ThumbUp fontSize=\"small\" className=\"navbar-icon\" />\r\n            </span>\r\n            <p>Video đã thích</p>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </div>\r\n      {/* <div className=\"navbar__overlay\"></div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\PlayVideo\\PlayVideo.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Home\\Home.js",["112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport VideoList from \"../../components/VideoList/VideoList\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport \"./Home.css\";\r\nimport { getMostPopularVideos } from \"../../api/baseApi\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Grid container>\r\n        <Grid item className=\"lg-2 md-2 sm-2 home__navbar\" xs={2}>\r\n          <NavBar />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          className=\"lg-10 md-10 sm-10 home__content\"\r\n          xs={10}\r\n          justify=\"space-around\"\r\n        >\r\n          <VideoList />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Result\\Result.js",["115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport { searchRequest, getVideoDetails } from \"../../api/baseApi\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Navbar from \"../../components/NavBar/NavBar\";\r\nimport VideoList from \"../../components/VideoList/VideoList\";\r\nimport \"./Result.css\";\r\n\r\nfunction Result(props) {\r\n  const inputSearch = props.match.params.inputSearch;\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => {\r\n        setIsMobile(window.innerWidth < 1280);\r\n      },\r\n      false\r\n    );\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          className={isMobile ? \" lg-1 md-1 sm-1\" : \"lg-2 md-2 sm-2\"}\r\n          xs={isMobile ? 1 : 2}\r\n        >\r\n          <Navbar />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          className={isMobile ? \" lg-9 md-9 sm-9\" : \"lg-8 md-8 sm-8\"}\r\n          xs={isMobile ? null : 8}\r\n          justify=\"center\"\r\n          style={{ padding: \"10px\" }}\r\n        >\r\n          <VideoList inputSearch={inputSearch} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Watch\\Watch.js",["117","118","119","120","121","122","123","124","125","126","127"],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\pages\\Channel\\Channel.js",["128","129","130","131","132","133","134","135","136","137"],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\api\\baseApi.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\SearchBar\\SearchBar.js",["138"],"import React, { useState } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport \"./SearchBar.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nfunction SearchBar(props) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)} className=\"searchbar\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Tìm kiếm\"\r\n        className=\"searchbar__input\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <Link to={{ pathname: `/result/${search}` }}>\r\n        <button type=\"submit\" className=\"searchbar__btn\">\r\n          <Search style={{ fontSize: \"3vmin\" }} />\r\n        </button>\r\n      </Link>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonVideoChannel.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonWatch.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\utils\\index.js",["139","140","141","142"],"export const ViewNumberFormatter = (num) => {\r\n  let FormatNum = 0;\r\n  if (num >= 1000 && num < 1000000) {\r\n    FormatNum = Math.round((num / 1000) * 10) / 10 + \" N\";\r\n  } else if (num >= 1000000 && num < 1000000000) {\r\n    FormatNum = Math.round((num / 1000000) * 10) / 10 + \" Tr\";\r\n  } else if (num >= 1000000000) {\r\n    FormatNum = Math.round((num / 1000000000) * 10) / 10 + \" T\";\r\n  } else {\r\n    FormatNum = num;\r\n  }\r\n  return FormatNum;\r\n};\r\n\r\nexport const ViewNumberFormatterDetails = (num) => {\r\n  return num?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n};\r\n\r\nexport const TimePublishToNow = (timePublish) => {\r\n  let FormatTime = 0;\r\n  const fromTime = Date.parse(timePublish) / 1000;\r\n  const toTime = Date.now() / 1000;\r\n  const timeDifferent = (toTime - fromTime) / (3600 * 24);\r\n  if (timeDifferent < 1.0) {\r\n    FormatTime = Math.floor(timeDifferent * 24) + \" giờ trước\";\r\n  } else if (timeDifferent >= 1 && timeDifferent < 7.0) {\r\n    FormatTime = Math.floor(timeDifferent) + \" ngày trước\";\r\n  } else if (timeDifferent >= 7.0 && timeDifferent < 30.0) {\r\n    FormatTime = Math.floor(timeDifferent / 7) + \" tuần trước\";\r\n  } else if (timeDifferent / 30 >= 1.0 && timeDifferent / 30 < 12.0) {\r\n    FormatTime = Math.floor(timeDifferent / 30) + \" tháng trước\";\r\n  } else {\r\n    FormatTime = Math.floor(timeDifferent / 364) + \" năm trước\";\r\n  }\r\n  return FormatTime;\r\n};\r\n\r\nexport const TimeFormatter = (time) => {\r\n  const temp = new Date(time);\r\n  // return temp;\r\n  return `${temp.getDate()} thg ${temp.getMonth() + 1}, ${temp.getFullYear()}`;\r\n};\r\n\r\nexport const DurationVideoFormatter = (duration) => {\r\n  let FormatTime = \"\";\r\n  for (var i = 0; i < duration.length; i++) {\r\n    if (duration[i] >= \"0\" && duration[i] <= \"9\") {\r\n      FormatTime += duration[i];\r\n    } else if (duration[i] === \"H\" || duration[i] === \"M\") {\r\n      FormatTime += \":\";\r\n    }\r\n  }\r\n  if (FormatTime === \"0\") {\r\n    return FormatTime;\r\n  } else if (FormatTime.length == 2) {\r\n    FormatTime = \"00:\" + FormatTime;\r\n  } else if (FormatTime.length < 4) {\r\n    FormatTime = FormatTime[0] + \":\" + \"0\" + FormatTime[2];\r\n  } else if (FormatTime.length == 4 && FormatTime.indexOf(\":\") == 2) {\r\n    FormatTime = FormatTime.substring(0, 3) + \"0\" + FormatTime[3];\r\n  }\r\n  return FormatTime;\r\n};\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\VideoList\\VideoList.js",["143","144"],"import React, { useEffect, useState } from \"react\";\r\nimport VideoDetails from \"../VideoDetails/VideoDetails\";\r\nimport \"./VideoList.css\";\r\nimport {\r\n  getMostPopularVideos,\r\n  searchRequest,\r\n  getChannel,\r\n  getVideoDetails,\r\n  getRelatedToVideo,\r\n  getMoreMostPopularVideos,\r\n} from \"../../api/baseApi\";\r\n//Skeleton\r\nimport {\r\n  SkeletonHome,\r\n  SkeletonHomeLoading,\r\n} from \"../../components/Skeleton/SkeletonHome\";\r\nimport {\r\n  SkeletonResult,\r\n  SkeletonResultLoading,\r\n} from \"../../components/Skeleton/SkeletonResult\";\r\nimport {\r\n  SkeletonWatch,\r\n  SkeletonWatchLoading,\r\n} from \"../../components/Skeleton/SkeletonWatch\";\r\n//Scroll loading\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction VideoList(props) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [nextPageToken, setNextPageToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (window.location.pathname.includes(\"result\")) {\r\n      searchRequest(props.inputSearch).then(async (res) => {\r\n        setNextPageToken(res.nextPageToken);\r\n        new Promise(async (resolutionFunc, rejectionFunc) => {\r\n          for (let data of res.items) {\r\n            const channelId = data.snippet.channelId;\r\n            let videoId;\r\n            if (data.id.videoId !== undefined) {\r\n              videoId = data.id.videoId;\r\n              const video = await getVideoDetails(videoId);\r\n              if (video[0].liveStreamingDetails !== undefined) {\r\n                data.viewLiveCount =\r\n                  video[0].liveStreamingDetails.concurrentViewers;\r\n              } else {\r\n                data.viewLiveCount = -1;\r\n              }\r\n              data.duration = video[0].contentDetails.duration;\r\n              data.viewCount = video[0].statistics.viewCount;\r\n            } else {\r\n              data.isChannel = true;\r\n            }\r\n            const channel = await getChannel(channelId);\r\n            data.subChannel = channel[0].statistics.subscriberCount;\r\n            data.videoCountChannel = channel[0].statistics.videoCount;\r\n            data.channelImage = channel[0].snippet.thumbnails.default.url;\r\n            data.id = data.id.videoId;\r\n          }\r\n          resolutionFunc(res.items);\r\n        }).then((data) => {\r\n          if (mounted) {\r\n            setLoading(false);\r\n          }\r\n          setData(data);\r\n        });\r\n      });\r\n    } else if (window.location.pathname.includes(\"watch\")) {\r\n      getRelatedToVideo(props.videoId).then((res) => {\r\n        new Promise(async (resolutionFunc, rejectionFunc) => {\r\n          let array = [];\r\n          for (let i = 0; i < res.length; i++) {\r\n            if (res[i].snippet === undefined) {\r\n              res.splice(res.indexOf(res[i]), 1);\r\n              i--;\r\n            } else {\r\n              const channelId = res[i].snippet.channelId;\r\n              const videoId = res[i].id.videoId;\r\n              const video = await getVideoDetails(videoId);\r\n              if (video[0].liveStreamingDetails !== undefined) {\r\n                data.viewLiveCount =\r\n                  video[0].liveStreamingDetails.concurrentViewers;\r\n              } else {\r\n                data.viewLiveCount = -1;\r\n              }\r\n              data.duration = video[0].contentDetails.duration;\r\n              res[i].duration = video[0].contentDetails.duration;\r\n              res[i].viewCount = video[0].statistics.viewCount;\r\n              const channel = await getChannel(channelId);\r\n              res[i].channelImage = channel[0].snippet.thumbnails.default.url;\r\n              res[i].id = res[i].id.videoId;\r\n            }\r\n          }\r\n          resolutionFunc(res);\r\n        }).then((data) => {\r\n          if (mounted) {\r\n            setLoading(false);\r\n          }\r\n          setData(data);\r\n        });\r\n      });\r\n    } else {\r\n      getMostPopularVideos().then(async (res) => {\r\n        setNextPageToken(res.nextPageToken);\r\n        new Promise(async (resolutionFunc, rejectionFunc) => {\r\n          for (let data of res.items) {\r\n            data.duration = data.contentDetails.duration;\r\n            const channelId = data.snippet.channelId;\r\n            const videoId = data.id;\r\n            const video = await getVideoDetails(videoId);\r\n            data.viewCount = video[0].statistics.viewCount;\r\n            const channel = await getChannel(channelId);\r\n            data.channelImage = channel[0].snippet.thumbnails.default.url;\r\n          }\r\n          resolutionFunc(res.items);\r\n        }).then((data) => {\r\n          if (mounted) {\r\n            setLoading(false);\r\n          }\r\n          setData(data);\r\n        });\r\n      });\r\n    }\r\n\r\n    return function cleanup() {\r\n      mounted = false;\r\n    };\r\n  }, [window.location.pathname]);\r\n\r\n  function nextPage() {\r\n    getMoreMostPopularVideos(nextPageToken).then((res) => {\r\n      setNextPageToken(res.nextPageToken);\r\n      new Promise(async (resolutionFunc, rejectionFunc) => {\r\n        for (let data of res.items) {\r\n          data.duration = data.contentDetails.duration;\r\n          const channelId = data.snippet.channelId;\r\n          const videoId = data.id;\r\n          const video = await getVideoDetails(videoId);\r\n          data.viewCount = video[0].statistics.viewCount;\r\n          const channel = await getChannel(channelId);\r\n          data.channelImage = channel[0].snippet.thumbnails.default.url;\r\n        }\r\n        resolutionFunc(res.items);\r\n      }).then((subdata) => {\r\n        setData([...data, ...subdata]);\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <>\r\n          {window.location.pathname.includes(\"watch\") ? (\r\n            <SkeletonWatch />\r\n          ) : window.location.pathname.includes(\"result\") ? (\r\n            <SkeletonResult />\r\n          ) : (\r\n            <SkeletonHome />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <InfiniteScroll\r\n          dataLength={data.length}\r\n          next={() => nextPage()}\r\n          hasMore={true}\r\n          loader={\r\n            window.location.pathname.includes(\"result\") ? (\r\n              <SkeletonResultLoading />\r\n            ) : window.location.pathname.includes(\"watch\") ? (\r\n              <SkeletonWatchLoading />\r\n            ) : (\r\n              <SkeletonHomeLoading />\r\n            )\r\n          }\r\n        >\r\n          <div\r\n            className={\r\n              window.location.pathname.includes(\"result\")\r\n                ? \"videolist__result\"\r\n                : window.location.pathname.includes(\"watch\")\r\n                ? \"videolist__watch\"\r\n                : \"videolist\"\r\n            }\r\n          >\r\n            {data.map((res) => {\r\n              return (\r\n                <VideoDetails\r\n                  duration={res.duration}\r\n                  viewCount={res.viewCount}\r\n                  title={res.snippet.title}\r\n                  image={res.snippet.thumbnails.medium.url}\r\n                  description={res.snippet.description}\r\n                  publishedAt={res.snippet.publishedAt}\r\n                  channelTitle={res.snippet.channelTitle}\r\n                  videoId={res.id}\r\n                  channelImage={res.channelImage}\r\n                  liveBroadcastContent={res.snippet.liveBroadcastContent}\r\n                  viewLiveCount={res.viewLiveCount}\r\n                  channelId={res.snippet.channelId}\r\n                  // IF result is Channel\r\n                  isChannel={res.isChannel}\r\n                  subChannel={res.subChannel}\r\n                  videoCountChannel={res.videoCountChannel}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </InfiniteScroll>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoList;\r\n","D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonHome.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\Skeleton\\SkeletonResult.js",[],"D:\\IT\\FETCH\\Youtube-Clone-FETCH\\src\\components\\VideoDetails\\VideoDetails.js",["145","146","147","148","149","150","151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CardHeader,\r\n  Avatar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  TimePublishToNow,\r\n  ViewNumberFormatter,\r\n  DurationVideoFormatter,\r\n} from \"../../utils\";\r\nimport \"./VideoDetails.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction VideoDetails(props) {\r\n  const [page, setPage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname.includes(\"result\")) {\r\n      setPage(\"result\");\r\n    } else if (window.location.pathname.includes(\"watch\")) {\r\n      setPage(\"watch\");\r\n    }\r\n  }, [window.location.pathname]);\r\n\r\n  return (\r\n    <div>\r\n      {page === \"result\" ? (\r\n        // result page\r\n        <Link\r\n          className=\"link\"\r\n          to={\r\n            props.isChannel\r\n              ? { pathname: `/channel/${props.channelId}` }\r\n              : { pathname: `/watch/${props.videoId}` }\r\n          }\r\n        >\r\n          {props.isChannel ? (\r\n            <hr style={{ border: \"1px solid rgba(0, 0, 0, 0.33)\" }} />\r\n          ) : null}\r\n          <div className=\"videodetails--result\">\r\n            <div\r\n              className={\r\n                props.isChannel\r\n                  ? \"videodetails__imgchannel\"\r\n                  : \"videodetails__img\"\r\n              }\r\n            >\r\n              <img\r\n                className={\r\n                  props.isChannel\r\n                    ? \"videodetails__img--imgchannel\"\r\n                    : \"videodetails__img--img\"\r\n                }\r\n                src={props.image}\r\n                alt=\"huyhero\"\r\n              ></img>\r\n              {props.isChannel ? null : (\r\n                <>\r\n                  {DurationVideoFormatter(`${props.duration}`) != \"0\" ? (\r\n                    <div className=\"duration duration--result\">\r\n                      <span style={{ padding: \"5px\" }}>\r\n                        {DurationVideoFormatter(`${props.duration}`)}\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"duration duration--result videodetails__content--live\">\r\n                      Trực tiếp\r\n                    </p>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className={props.isChannel ? \"infoChannel\" : null}>\r\n              <div className=\"videodetails__content--result\">\r\n                <div className=\"videodetais__content--result--title\">\r\n                  <p\r\n                    className={props.isChannel ? \"channelTitle\" : \"videotitle\"}\r\n                  >\r\n                    {props.title}\r\n                  </p>\r\n                  {props.isChannel ? (\r\n                    <div className=\"text-opacity\">\r\n                      {`${ViewNumberFormatter(\r\n                        props.subChannel\r\n                      )} lượt đăng ký・${props.videoCountChannel} videos`}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-opacity\">\r\n                      {props.liveBroadcastContent === \"none\"\r\n                        ? `${ViewNumberFormatter(\r\n                            props.viewCount\r\n                          )} lượt xem・${TimePublishToNow(props.publishedAt)}`\r\n                        : `${ViewNumberFormatter(\r\n                            props.viewLiveCount\r\n                          )} người đang xem`}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {props.isChannel ? null : (\r\n                  <Link\r\n                    className=\"link\"\r\n                    to={{ pathname: `/channel/${props.channelId}` }}\r\n                  >\r\n                    <div\r\n                      style={{ display: \"flex\" }}\r\n                      className=\"videodetais__content--result--channel\"\r\n                    >\r\n                      <Avatar alt=\"Remy Sharp\" src={props.channelImage} />\r\n                      <p\r\n                        className=\"text-opacity\"\r\n                        style={{\r\n                          paddingLeft: \"10px\",\r\n                        }}\r\n                      >\r\n                        {props.channelTitle}\r\n                      </p>\r\n                    </div>\r\n                  </Link>\r\n                )}\r\n\r\n                <div className=\"videodetails__content--result--description\">\r\n                  <p\r\n                    style={{ fontSize: \"15px\" }}\r\n                    className=\"videotitle result--description text-opacity\"\r\n                  >\r\n                    {props.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {props.isChannel ? (\r\n            <hr style={{ border: \"1px solid rgba(0, 0, 0, 0.33)\" }} />\r\n          ) : null}\r\n        </Link>\r\n      ) : page === \"watch\" ? (\r\n        <Link className=\"link\" to={{ pathname: `/watch/${props.videoId}` }}>\r\n          <div className=\"videodetails--watch\">\r\n            <div className=\"videodetails__img--watch\">\r\n              <img\r\n                className=\"videodetails__img--img\"\r\n                src={props.image}\r\n                width=\"190px\"\r\n                height=\"110px\"\r\n                alt=\"huyhero\"\r\n              ></img>\r\n              {DurationVideoFormatter(`${props.duration}`) != \"0\" ? (\r\n                <div className=\"duration duration--watch\">\r\n                  <span style={{ padding: \"5px\" }}>\r\n                    {DurationVideoFormatter(`${props.duration}`)}\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                <p className=\"duration duration--watch videodetails__content--live\">\r\n                  Trực tiếp\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"videodetails__content--result\">\r\n              <p\r\n                className=\"videotitle\"\r\n                style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\r\n              >\r\n                {props.title}\r\n              </p>\r\n              <Link\r\n                className=\"link\"\r\n                to={{ pathname: `/channel/${props.channelId}` }}\r\n              >\r\n                <p style={{ fontSize: \"15px\", color: \"rgb(0, 0, 0, 0.6)\" }}>\r\n                  {props.channelTitle}\r\n                </p>\r\n              </Link>\r\n\r\n              {`${ViewNumberFormatter(\r\n                props.viewCount\r\n              )} lượt xem・${TimePublishToNow(props.publishedAt)}`}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ) : (\r\n        <div className=\"videodetails\">\r\n          <Link className=\"link\" to={{ pathname: `/watch/${props.videoId}` }}>\r\n            <div className=\"videodetails__img\">\r\n              <img src={props.image} width=\"360px\" alt=\"huyhero\"></img>\r\n              {DurationVideoFormatter(`${props.duration}`) !== \"0\" ? (\r\n                <div className=\"duration\">\r\n                  <span style={{ padding: \"5px\" }}>\r\n                    {DurationVideoFormatter(`${props.duration}`)}\r\n                  </span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"videodetails__content\">\r\n              <div className=\"videodetails__content--avatar\">\r\n                <Link\r\n                  className=\"link\"\r\n                  to={{ pathname: `/channel/${props.channelId}` }}\r\n                >\r\n                  <Avatar alt=\"Remy Sharp\" src={props.channelImage} />\r\n                </Link>\r\n              </div>\r\n              <div className=\"videodetails__content--info\">\r\n                <p\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                  }}\r\n                  className=\"videotitle\"\r\n                >\r\n                  {props.title}\r\n                </p>\r\n                <Link\r\n                  className=\"link\"\r\n                  to={{ pathname: `/channel/${props.channelId}` }}\r\n                >\r\n                  <p style={{ color: \"rgb(0, 0, 0, 0.6)\" }}>\r\n                    {props.channelTitle}\r\n                  </p>\r\n                </Link>\r\n\r\n                {`${ViewNumberFormatter(\r\n                  props.viewCount\r\n                )} lượt xem・${TimePublishToNow(props.publishedAt)}`}\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoDetails;\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"161","line":5,"column":3,"nodeType":"159","messageId":"160","endLine":5,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":20},{"ruleId":"157","severity":1,"message":"163","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":14},{"ruleId":"157","severity":1,"message":"164","line":16,"column":10,"nodeType":"159","messageId":"160","endLine":16,"endColumn":20},{"ruleId":"157","severity":1,"message":"165","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":17},{"ruleId":"157","severity":1,"message":"166","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":28},{"ruleId":"157","severity":1,"message":"167","line":1,"column":30,"nodeType":"159","messageId":"160","endLine":1,"endColumn":38},{"ruleId":"157","severity":1,"message":"168","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"169","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":22,"column":11,"nodeType":"173","endLine":22,"endColumn":58},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"167","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"174","line":5,"column":3,"nodeType":"159","messageId":"160","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"175","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"157","severity":1,"message":"176","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":7},{"ruleId":"157","severity":1,"message":"167","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"177","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":30},{"ruleId":"157","severity":1,"message":"178","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":23},{"ruleId":"157","severity":1,"message":"179","line":2,"column":25,"nodeType":"159","messageId":"160","endLine":2,"endColumn":40},{"ruleId":"157","severity":1,"message":"180","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":34},{"ruleId":"157","severity":1,"message":"181","line":3,"column":24,"nodeType":"159","messageId":"160","endLine":3,"endColumn":29},{"ruleId":"157","severity":1,"message":"182","line":3,"column":31,"nodeType":"159","messageId":"160","endLine":3,"endColumn":43},{"ruleId":"157","severity":1,"message":"183","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":44,"column":13,"nodeType":"186","endLine":99,"endColumn":4},{"ruleId":"157","severity":1,"message":"187","line":87,"column":13,"nodeType":"159","messageId":"160","endLine":87,"endColumn":17},{"ruleId":"184","severity":1,"message":"188","line":99,"column":6,"nodeType":"189","endLine":99,"endColumn":32,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":150,"column":27,"nodeType":"193","messageId":"194","endLine":150,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":344,"column":50,"nodeType":"193","messageId":"194","endLine":344,"endColumn":52},{"ruleId":"191","severity":1,"message":"195","line":346,"column":49,"nodeType":"193","messageId":"194","endLine":346,"endColumn":51},{"ruleId":"171","severity":1,"message":"172","line":362,"column":29,"nodeType":"173","endLine":364,"endColumn":31},{"ruleId":"157","severity":1,"message":"196","line":10,"column":3,"nodeType":"159","messageId":"160","endLine":10,"endColumn":9},{"ruleId":"184","severity":1,"message":"185","line":97,"column":13,"nodeType":"186","endLine":124,"endColumn":4},{"ruleId":"184","severity":1,"message":"197","line":124,"column":6,"nodeType":"189","endLine":124,"endColumn":8,"suggestions":"198"},{"ruleId":"171","severity":1,"message":"172","line":165,"column":21,"nodeType":"173","endLine":170,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":219,"column":67,"nodeType":"186","messageId":"201","endLine":219,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":228,"column":41,"nodeType":"173","endLine":234,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":267,"column":58,"nodeType":"186","messageId":"201","endLine":267,"endColumn":60},{"ruleId":"157","severity":1,"message":"202","line":270,"column":35,"nodeType":"159","messageId":"160","endLine":270,"endColumn":47},{"ruleId":"171","severity":1,"message":"172","line":299,"column":35,"nodeType":"173","endLine":304,"endColumn":36},{"ruleId":"191","severity":1,"message":"195","line":337,"column":44,"nodeType":"193","messageId":"194","endLine":337,"endColumn":46},{"ruleId":"157","severity":1,"message":"203","line":4,"column":16,"nodeType":"159","messageId":"160","endLine":4,"endColumn":24},{"ruleId":"191","severity":1,"message":"195","line":55,"column":32,"nodeType":"193","messageId":"194","endLine":55,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":58,"column":38,"nodeType":"193","messageId":"206","endLine":58,"endColumn":39},{"ruleId":"191","severity":1,"message":"195","line":59,"column":32,"nodeType":"193","messageId":"194","endLine":59,"endColumn":34},{"ruleId":"191","severity":1,"message":"195","line":59,"column":64,"nodeType":"193","messageId":"194","endLine":59,"endColumn":66},{"ruleId":"157","severity":1,"message":"207","line":73,"column":15,"nodeType":"159","messageId":"160","endLine":73,"endColumn":20},{"ruleId":"184","severity":1,"message":"208","line":130,"column":6,"nodeType":"189","endLine":130,"endColumn":32,"suggestions":"209"},{"ruleId":"157","severity":1,"message":"210","line":3,"column":3,"nodeType":"159","messageId":"160","endLine":3,"endColumn":7},{"ruleId":"157","severity":1,"message":"211","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"212","line":5,"column":3,"nodeType":"159","messageId":"160","endLine":5,"endColumn":12},{"ruleId":"157","severity":1,"message":"213","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"157","severity":1,"message":"214","line":8,"column":3,"nodeType":"159","messageId":"160","endLine":8,"endColumn":13},{"ruleId":"184","severity":1,"message":"215","line":27,"column":6,"nodeType":"189","endLine":27,"endColumn":32,"suggestions":"216"},{"ruleId":"191","severity":1,"message":"192","line":63,"column":64,"nodeType":"193","messageId":"194","endLine":63,"endColumn":66},{"ruleId":"191","severity":1,"message":"192","line":151,"column":60,"nodeType":"193","messageId":"194","endLine":151,"endColumn":62},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","'makeStyles' is defined but never used.","'NavBar' is defined but never used.","'showNavbar' is assigned a value but never used.","'PlayVideo' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'axios' is defined but never used.","'baseApi' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ListItemIcon' is defined but never used.","'Typography' is defined but never used.","'Menu' is defined but never used.","'getMostPopularVideos' is defined but never used.","'searchRequest' is defined but never used.","'getVideoDetails' is defined but never used.","'useRef' is defined but never used.","'Badge' is defined but never used.","'isMuiElement' is defined but never used.","'InsertInvitation' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'playlistId.playlist', 'runInterval', and 'videoId'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["219"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'channelId'. Either include it or remove the dependency array.",["220"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'playlistItem' is assigned a value but never used.","'Redirect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'array' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'props.inputSearch', and 'props.videoId'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["221"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [playlistId.playlist, runInterval, videoId]",{"range":"231","text":"232"},"Update the dependencies array to be: [channelId]",{"range":"233","text":"234"},"Update the dependencies array to be: [data, props.inputSearch, props.videoId]",{"range":"235","text":"236"},"Update the dependencies array to be: []",{"range":"237","text":"238"},[3387,3413],"[playlistId.playlist, runInterval, videoId]",[3305,3307],"[channelId]",[4739,4765],"[data, props.inputSearch, props.videoId]",[628,654],"[]"]